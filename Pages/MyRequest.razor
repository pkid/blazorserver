@page "/myrequest"

@inherits LayoutComponentBase

@inject SitterRequestService sitterRequestService
@inject AuthenticationStateProvider authenticationStateProvider


<MudContainer MaxWidth="MaxWidth.Large">
    <MudTable Items="@CreatedSitterRequests" Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Created Requests</MudText>
            <MudSpacer />
        </ToolBarContent>
        <HeaderContent>
            <MudTh>Request Id</MudTh>
            <MudTh>Name</MudTh>
            <MudTh>Sitter</MudTh>
            <MudTh>Start Date Time</MudTh>
            <MudTh>End Date Time</MudTh>
            <MudTh>Description</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.Id</MudTd>
            <MudTd>@context.Name</MudTd>
            <MudTd>@context.SitterEmail</MudTd>
            <MudTd>@context.StartDateTime.</MudTd>
            <MudTd>@context.EndDateTime</MudTd>
            <MudTd>@context.Description</MudTd>
        </RowTemplate>
    </MudTable>


    <MudTable Items="@AcceptedSitterRequests" Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Accepted Requests</MudText>
            <MudSpacer />
        </ToolBarContent>
        <HeaderContent>
            <MudTh>Request Id</MudTh>
            <MudTh>Name</MudTh>
            <MudTh>Requester</MudTh>
            <MudTh>Start Date Time</MudTh>
            <MudTh>End Date Time</MudTh>
            <MudTh>Description</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.Id</MudTd>
            <MudTd>@context.Name</MudTd>
            <MudTd>@context.RequesterEmail</MudTd>
            <MudTd>@context.StartDateTime.</MudTd>
            <MudTd>@context.EndDateTime</MudTd>
            <MudTd>@context.Description</MudTd>
        </RowTemplate>
    </MudTable>
</MudContainer>


@code {

    List<SitterRequest> CreatedSitterRequests = new List<SitterRequest>();
    List<SitterRequest> AcceptedSitterRequests = new List<SitterRequest>();

    protected override async Task OnInitializedAsync()
    {
        await RefreshSitterRequests();
    }

    private async Task RefreshSitterRequests()
    {
        var authState = await this.authenticationStateProvider.GetAuthenticationStateAsync();
        var me = authState.User.Identity.Name;

        this.CreatedSitterRequests = await sitterRequestService.QuerySitterRequestByRequester(me);

        this.AcceptedSitterRequests = await sitterRequestService.QuerySitterRequestBySitter(me);
    }

}
